{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1","program":"/Users/jacobfeldman/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","criterion","/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=9ecba1cd49944b3a","-C","extra-filename=-9ecba1cd49944b3a","--out-dir","/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps","-L","dependency=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps","--extern","atty=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libatty-282d62eff9712068.rmeta","--extern","cast=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libcast-8b9da651a61f94c5.rmeta","--extern","clap=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libclap-b9ffab9633c7f332.rmeta","--extern","criterion_plot=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libcriterion_plot-cf4bdd75f5a898cb.rmeta","--extern","csv=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libcsv-c0e359ed6e1ed5e2.rmeta","--extern","itertools=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libitertools-24116ee1117a5646.rmeta","--extern","lazy_static=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/liblazy_static-8e123c54698e3a37.rmeta","--extern","num_traits=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libnum_traits-2ce4ea110629b1e8.rmeta","--extern","oorandom=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/liboorandom-071165fd20e55fea.rmeta","--extern","plotters=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libplotters-b0213b48dc44ef21.rmeta","--extern","rayon=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/librayon-ca69a7037a0b625d.rmeta","--extern","regex=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libregex-bfdf964ea2fc4e41.rmeta","--extern","serde=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libserde-eb40098688521258.rmeta","--extern","serde_derive=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libserde_derive-94bea0ec29e8b1ca.dylib","--extern","serde_json=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libserde_json-a3bab9d561b2dafc.rmeta","--extern","tinytemplate=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libtinytemplate-0da5e1d3de74bd61.rmeta","--extern","walkdir=/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libwalkdir-da3f23cc65ebf997.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/jacobfeldman/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jacobfeldman/Documents/Rust-Wasm-Js/target/rls/debug/deps/libcriterion-9ecba1cd49944b3a.rmeta"},"prelude":{"crate_id":{"name":"criterion","disambiguator":[5328702865941423315,8962644022118631144]},"crate_root":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src","external_crates":[{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[5447528554659399162,2961476109220051939]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[5080823206311852977,7939283367201448617]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":17,"id":{"name":"clap","disambiguator":[8553785698858975473,11359431924892861964]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[9896633610425871187,16061992971720893451]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":19,"id":{"name":"textwrap","disambiguator":[9278523264133418647,15584589189597975194]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":20,"id":{"name":"unicode_width","disambiguator":[2466114116181299287,3280143173034843026]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":21,"id":{"name":"regex","disambiguator":[2886270375500172520,2406777075211661227]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":22,"id":{"name":"regex_syntax","disambiguator":[8997585527008492250,11815103120954438943]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":23,"id":{"name":"atty","disambiguator":[3805984595483266665,17061550801825899910]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":24,"id":{"name":"libc","disambiguator":[14542157799492976951,15619345094937603287]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","num":25,"id":{"name":"criterion_plot","disambiguator":[17178531648572037214,11079160707444670046]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","num":26,"id":{"name":"cast","disambiguator":[17523971832833549778,3588660773997239581]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/summary.rs","num":27,"id":{"name":"itertools","disambiguator":[5601720630599427956,1823488527283325862]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","num":28,"id":{"name":"either","disambiguator":[12706027939346762477,9774787557692746702]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":29,"id":{"name":"csv","disambiguator":[7166700431652779296,11205080408116242029]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","num":30,"id":{"name":"serde","disambiguator":[10232305121621196360,6702569093626254684]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":31,"id":{"name":"bstr","disambiguator":[17179199746933435858,7233566023999190107]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":32,"id":{"name":"memchr","disambiguator":[15078197572889224445,16450742649664985642]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":33,"id":{"name":"regex_automata","disambiguator":[12893450292073248192,16088489836898177058]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":34,"id":{"name":"byteorder","disambiguator":[1737028884314239062,6451440974110326553]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":35,"id":{"name":"csv_core","disambiguator":[12516013353690841566,15064548184845521472]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":36,"id":{"name":"itoa","disambiguator":[1828677304224675789,2350851677538302651]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","num":37,"id":{"name":"ryu","disambiguator":[10096948177983798285,9533413733687268766]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","num":38,"id":{"name":"serde_json","disambiguator":[3611178000500071002,7872366502308148692]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/fs.rs","num":39,"id":{"name":"walkdir","disambiguator":[9245631864076174994,10748536318375269414]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/fs.rs","num":40,"id":{"name":"same_file","disambiguator":[5388543008086840586,5625287010519666262]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","num":41,"id":{"name":"tinytemplate","disambiguator":[17029150498011512814,12868177934631974191]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/plotters_backend/mod.rs","num":42,"id":{"name":"plotters","disambiguator":[13554506202514750334,3858900096974372274]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","num":43,"id":{"name":"num_traits","disambiguator":[956065448868526796,5118982348904493139]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":44,"id":{"name":"rayon","disambiguator":[17221040957548324923,5200224791246380277]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":45,"id":{"name":"crossbeam_deque","disambiguator":[9788861739062810631,3643251490857955207]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":46,"id":{"name":"crossbeam_epoch","disambiguator":[1336046125414919559,2025370371346608063]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":47,"id":{"name":"cfg_if","disambiguator":[10201928301582868305,15717936632155057518]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":48,"id":{"name":"maybe_uninit","disambiguator":[15254710769028076937,5077428055350973326]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":49,"id":{"name":"crossbeam_utils","disambiguator":[9701662205736921071,2588488314631365860]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":50,"id":{"name":"memoffset","disambiguator":[12405077565795302896,10582156427064007725]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":51,"id":{"name":"scopeguard","disambiguator":[15270720583694984572,2301021778427417115]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":52,"id":{"name":"rayon_core","disambiguator":[15952491039530769930,1885236736855623342]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":53,"id":{"name":"crossbeam_queue","disambiguator":[2325256379364738253,17851339035141952349]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","num":54,"id":{"name":"num_cpus","disambiguator":[1342188459835570273,16237988358864252628]}},{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/rand_util.rs","num":55,"id":{"name":"oorandom","disambiguator":[2463346546438951594,2643132876226549493]}}],"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":0,"byte_end":57878,"line_start":1,"line_end":1639,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":2452,"byte_end":2461,"line_start":99,"line_end":99,"column_start":28,"column_end":37},"alias_span":null,"name":"Benchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":2463,"byte_end":2482,"line_start":99,"line_end":99,"column_start":39,"column_end":58},"alias_span":null,"name":"BenchmarkDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":2484,"byte_end":2506,"line_start":99,"line_end":99,"column_start":60,"column_end":82},"alias_span":null,"name":"ParameterizedBenchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":2542,"byte_end":2556,"line_start":100,"line_end":100,"column_start":34,"column_end":48},"alias_span":null,"name":"BenchmarkGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":2558,"byte_end":2569,"line_start":100,"line_end":100,"column_start":50,"column_end":61},"alias_span":null,"name":"BenchmarkId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":0,"byte_end":57878,"line_start":1,"line_end":1639,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":14},{"krate":0,"index":83},{"krate":0,"index":168},{"krate":0,"index":241},{"krate":0,"index":264},{"krate":0,"index":281},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":337},{"krate":0,"index":442},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":495},{"krate":0,"index":952},{"krate":0,"index":962},{"krate":0,"index":1098},{"krate":0,"index":1141},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1635},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2277},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1646},{"krate":0,"index":2280},{"krate":0,"index":2308},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2300},{"krate":0,"index":2297},{"krate":0,"index":2295},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1661},{"krate":0,"index":2310},{"krate":0,"index":2318},{"krate":0,"index":2316},{"krate":0,"index":2315},{"krate":0,"index":2320},{"krate":0,"index":2328},{"krate":0,"index":2326},{"krate":0,"index":2325},{"krate":0,"index":1697},{"krate":0,"index":1715},{"krate":0,"index":1718},{"krate":0,"index":1759},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":2330},{"krate":0,"index":2392},{"krate":0,"index":2391},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2342},{"krate":0,"index":2336},{"krate":0,"index":2334},{"krate":0,"index":2394},{"krate":0,"index":2456},{"krate":0,"index":2455},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2406},{"krate":0,"index":2400},{"krate":0,"index":2398},{"krate":0,"index":1779},{"krate":0,"index":2458},{"krate":0,"index":2516},{"krate":0,"index":2514},{"krate":0,"index":2508},{"krate":0,"index":2469},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2518},{"krate":0,"index":2526},{"krate":0,"index":2524},{"krate":0,"index":2523},{"krate":0,"index":2528},{"krate":0,"index":2532},{"krate":0,"index":2530},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785}],"decl_id":null,"docs":" A statistics-driven micro-benchmarking library written in Rust.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":737,"byte_end":759,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"deny(bare_trait_objects)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":760,"byte_end":788,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"deny(warnings)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":789,"byte_end":807,"line_start":20,"line_end":20,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":76841,"byte_end":76863,"line_start":76,"line_end":76,"column_start":12,"column_end":34},"name":"ParameterizedBenchmark","qualname":"::benchmark::ParameterizedBenchmark","value":"ParameterizedBenchmark {  }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which take one parameter.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":77177,"byte_end":77186,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"Benchmark","qualname":"::benchmark::Benchmark","value":"Benchmark {  }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which takes no parameters.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":77472,"byte_end":77491,"line_start":95,"line_end":95,"column_start":11,"column_end":30},"name":"BenchmarkDefinition","qualname":"::benchmark::BenchmarkDefinition","value":"BenchmarkDefinition<M: Measurement = WallTime>: Sized","parent":null,"children":[{"krate":0,"index":135}],"decl_id":null,"docs":" Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be\n used outside of Criterion.rs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":77554,"byte_end":77557,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"run","qualname":"::benchmark::BenchmarkDefinition::run","value":"fn (self, group_id: &str, c: &mut Criterion<M>) -> ()","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":82599,"byte_end":82602,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<Benchmark<M>>::new","value":"fn <S, F> (id: S, f: F) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new benchmark group and adds the given function to it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":82968,"byte_end":82981,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"with_function","qualname":"<Benchmark<M>>::with_function","value":"fn <S, F> (mut self, id: S, mut f: F) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":83432,"byte_end":83442,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"throughput","qualname":"<Benchmark<M>>::throughput","value":"fn (mut self, throughput: Throughput) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":86795,"byte_end":86798,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"new","qualname":"<ParameterizedBenchmark<T, M>>::new","value":"fn <S, F, I> (id: S, f: F, parameters: I) -> ParameterizedBenchmark<T, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new parameterized benchmark group and adds the given function\n to it.\n The function under test must follow the setup - bench - teardown pattern:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":87304,"byte_end":87317,"line_start":411,"line_end":411,"column_start":12,"column_end":25},"name":"with_function","qualname":"<ParameterizedBenchmark<T, M>>::with_function","value":"fn <S, F> (mut self, id: S, f: F) -> ParameterizedBenchmark<T, M>","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":87751,"byte_end":87761,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"throughput","qualname":"<ParameterizedBenchmark<T, M>>::throughput","value":"fn <F> (mut self, throughput: F) -> ParameterizedBenchmark<T, M>","parent":null,"children":[],"decl_id":null,"docs":" Use the given function to calculate the input size for a given input.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":93388,"byte_end":93402,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"BenchmarkGroup","qualname":"::benchmark_group::BenchmarkGroup","value":"BenchmarkGroup {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" Structure used to group together a set of related benchmarks, along with custom configuration\n settings for groups of benchmarks. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":93985,"byte_end":93996,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<BenchmarkGroup>::sample_size","value":"fn (&mut self, n: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the size of the sample for this benchmark","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":94272,"byte_end":94284,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<BenchmarkGroup>::warm_up_time","value":"fn (&mut self, dur: Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the warm up time for this benchmark","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":95074,"byte_end":95090,"line_start":125,"line_end":125,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<BenchmarkGroup>::measurement_time","value":"fn (&mut self, dur: Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the target measurement time for this benchmark group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":95728,"byte_end":95738,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<BenchmarkGroup>::nresamples","value":"fn (&mut self, n: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of resamples for this benchmark group","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":96380,"byte_end":96395,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<BenchmarkGroup>::noise_threshold","value":"fn (&mut self, threshold: f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the noise threshold for this benchmark group","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":96927,"byte_end":96943,"line_start":179,"line_end":179,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<BenchmarkGroup>::confidence_level","value":"fn (&mut self, cl: f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the confidence level for this benchmark group","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":97498,"byte_end":97516,"line_start":195,"line_end":195,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<BenchmarkGroup>::significance_level","value":"fn (&mut self, sl: f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for this benchmark group","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":97747,"byte_end":97758,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"plot_config","qualname":"<BenchmarkGroup>::plot_config","value":"fn (&mut self, new_config: PlotConfiguration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the plot configuration for this benchmark group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":97997,"byte_end":98007,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"throughput","qualname":"<BenchmarkGroup>::throughput","value":"fn (&mut self, throughput: Throughput) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":98555,"byte_end":98569,"line_start":227,"line_end":227,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<BenchmarkGroup>::bench_function","value":"fn <ID, F> (&mut self, id: ID, mut f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterless function inside this benchmark group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":98868,"byte_end":98884,"line_start":236,"line_end":236,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<BenchmarkGroup>::bench_with_input","value":"fn <ID, F, I> (&mut self, id: ID, input: &I, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterized function inside this benchmark group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":100871,"byte_end":100877,"line_start":302,"line_end":302,"column_start":12,"column_end":18},"name":"finish","qualname":"<BenchmarkGroup>::finish","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Consume the benchmark group and generate the summary reports for the group.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":102024,"byte_end":102035,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"BenchmarkId","qualname":"::benchmark_group::BenchmarkId","value":"BenchmarkId {  }","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835}],"decl_id":null,"docs":" Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark\n group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":103585,"byte_end":103588,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<BenchmarkId>::new","value":"fn <S, P> (function_name: S, parameter: P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from a string function name and a parameter value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104017,"byte_end":104031,"line_start":382,"line_end":382,"column_start":12,"column_end":26},"name":"from_parameter","qualname":"<BenchmarkId>::from_parameter","value":"fn <P> (parameter: P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from just a parameter value. Use this when benchmarking a\n single function with a variety of different inputs.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104617,"byte_end":104623,"line_start":405,"line_end":405,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::benchmark_group::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":234},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104811,"byte_end":104826,"line_start":411,"line_end":411,"column_start":11,"column_end":26},"name":"IntoBenchmarkId","qualname":"::benchmark_group::IntoBenchmarkId","value":"IntoBenchmarkId: private::Sealed","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" Sealed trait which allows users to automatically convert strings to benchmark IDs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104853,"byte_end":104870,"line_start":412,"line_end":412,"column_start":8,"column_end":25},"name":"into_benchmark_id","qualname":"::benchmark_group::IntoBenchmarkId::into_benchmark_id","value":"fn (self) -> BenchmarkId","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":453},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"measurement","qualname":"::measurement","value":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":486}],"decl_id":null,"docs":" This module defines a set of traits that can be used to plug different measurements (eg.\n Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also\n includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time\n measurement.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":148389,"byte_end":148403,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"ValueFormatter","qualname":"::measurement::ValueFormatter","value":"ValueFormatter","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"decl_id":null,"docs":" Trait providing functions to format measured values to string so that they can be displayed on\n the command line or in the reports. The functions of this trait take measured values in f64\n form; implementors can assume that the values are of the same scale as those produced by the\n associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in\n nanoseconds, the values passed to the formatter will be in nanoseconds).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":148489,"byte_end":148501,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"format_value","qualname":"::measurement::ValueFormatter::format_value","value":"fn (&self, value: f64) -> String","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Format the value (with appropriate unit) and return it as a string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":148881,"byte_end":148898,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"format_throughput","qualname":"::measurement::ValueFormatter::format_throughput","value":"fn (&self, throughput: &Throughput, value: f64) -> String","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Format the value as a throughput measurement. The value represents the measurement value;\n the implementor will have to calculate bytes per second, iterations per cycle, etc.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":149601,"byte_end":149613,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"scale_values","qualname":"::measurement::ValueFormatter::scale_values","value":"fn (&self, typical_value: f64, values: &mut [f64]) -> &'static str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Scale the given values to some appropriate unit and return the unit string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":150249,"byte_end":150266,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"scale_throughputs","qualname":"::measurement::ValueFormatter::scale_throughputs","value":"fn (&self, typical_value: f64, throughput: &Throughput, values: &mut [f64]) -> &'static str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Convert the given measured values into throughput numbers based on the given throughput\n value, scale them to some appropriate unit, and return the unit string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":150720,"byte_end":150738,"line_start":64,"line_end":64,"column_start":8,"column_end":26},"name":"scale_for_machines","qualname":"::measurement::ValueFormatter::scale_for_machines","value":"fn (&self, values: &mut [f64]) -> &'static str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Scale the values and return a unit string designed for machines.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":466},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":151335,"byte_end":151346,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"Measurement","qualname":"::measurement::Measurement","value":"Measurement","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"decl_id":null,"docs":" Trait for all types which define something Criterion.rs can measure. The only measurement\n currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks\n may define more.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":467},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":151585,"byte_end":151597,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"Intermediate","qualname":"::measurement::Measurement::Intermediate","value":"type Intermediate;","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" This type represents an intermediate value for the measurements. It will be produced by the\n start function and passed to the end function. An example might be the wall-clock time as\n of the `start` call.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":151743,"byte_end":151748,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"name":"Value","qualname":"::measurement::Measurement::Value","value":"type Value;","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" This type is the measured value. An example might be the elapsed wall-clock time between the\n `start` and `end` calls.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":151826,"byte_end":151831,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"start","qualname":"::measurement::Measurement::start","value":"fn (&self) -> Self::Intermediate","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Criterion.rs will call this before iterating the benchmark.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":151963,"byte_end":151966,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"end","qualname":"::measurement::Measurement::end","value":"fn (&self, i: Self::Intermediate) -> Self::Value","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Criterion.rs will call this after iterating the benchmark to get the measured value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":152223,"byte_end":152226,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"add","qualname":"::measurement::Measurement::add","value":"fn (&self, v1: &Self::Value, v2: &Self::Value) -> Self::Value","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches\n of iterations, so the value from one batch must be added to the sum of the previous batches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":152380,"byte_end":152384,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"zero","qualname":"::measurement::Measurement::zero","value":"fn (&self) -> Self::Value","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Return a \"zero\" value for the Value type which can be added to another value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":152507,"byte_end":152513,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::measurement::Measurement::to_f64","value":"fn (&self, value: &Self::Value) -> f64","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Converts the measured value to f64 so that it can be used in statistical analysis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":152643,"byte_end":152652,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"formatter","qualname":"::measurement::Measurement::formatter","value":"fn (&self) -> &dyn ValueFormatter","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Return a trait-object reference to the value formatter for this measurement.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":155360,"byte_end":155368,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"WallTime","qualname":"::measurement::WallTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the\n beginning of a series of iterations to the end.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":952},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"profiler","qualname":"::profiler","value":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":959}],"decl_id":null,"docs":" This module provides an extension trait which allows in-process profilers\n to be hooked into the `--profile-time` argument at compile-time. Users of\n out-of-process profilers such as perf don't need to do anything special.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":954},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":246829,"byte_end":246837,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Profiler","qualname":"::profiler::Profiler","value":"Profiler","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" Extension trait for external crates to implement which provides start/stop\n hooks when profiling (but not when benchmarking) functions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":247060,"byte_end":247075,"line_start":13,"line_end":13,"column_start":8,"column_end":23},"name":"start_profiling","qualname":"::profiler::Profiler::start_profiling","value":"fn (&mut self, benchmark_id: &str, benchmark_dir: &Path) -> ()","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" This function is called when Criterion.rs starts profiling a particular\n benchmark. It provides the stringified benchmark ID and\n a path to a directory where the profiler can store its data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":247342,"byte_end":247356,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"stop_profiling","qualname":"::profiler::Profiler::stop_profiling","value":"fn (&mut self, benchmark_id: &str, benchmark_dir: &Path) -> ()","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" This function is called after Criterion.rs stops profiling a particular\n benchmark. The benchmark ID and directory are the same as in the call\n to `start`, provided for convenience.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":957},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":247651,"byte_end":247667,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"name":"ExternalProfiler","qualname":"::profiler::ExternalProfiler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy profiler implementation, representing cases where the profiler is\n an external process (eg. perftools, etc.) which do not require start/stop\n hooks. This implementation does nothing and is used as the default.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":293923,"byte_end":293928,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::stats::tuple::Tuple","value":"Tuple: Sized","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233}],"decl_id":null,"docs":" Any tuple: `(A, B, ..)`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294007,"byte_end":294020,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"Distributions","qualname":"::stats::tuple::Tuple::Distributions","value":"type Distributions: TupledDistributions<Item = Self>;","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" A tuple of distributions associated with this tuple\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294120,"byte_end":294127,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Builder","qualname":"::stats::tuple::Tuple::Builder","value":"type Builder: TupledDistributionsBuilder<Item = Self>;","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" A tuple of vectors associated with this tuple\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294254,"byte_end":294273,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"TupledDistributions","qualname":"::stats::tuple::TupledDistributions","value":"TupledDistributions: Sized","parent":null,"children":[{"krate":0,"index":1235}],"decl_id":null,"docs":" A tuple of distributions: `(Distribution<A>, Distribution<B>, ..)`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294366,"byte_end":294370,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributions::Item","value":"type Item: Tuple<Distributions = Self>;","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294463,"byte_end":294489,"line_start":21,"line_end":21,"column_start":11,"column_end":37},"name":"TupledDistributionsBuilder","qualname":"::stats::tuple::TupledDistributionsBuilder","value":"TupledDistributionsBuilder: Sized","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"decl_id":null,"docs":" A tuple of vecs used to build distributions.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294582,"byte_end":294586,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributionsBuilder::Item","value":"type Item: Tuple<Builder = Self>;","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294655,"byte_end":294658,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"new","qualname":"::stats::tuple::TupledDistributionsBuilder::new","value":"fn (size: usize) -> Self","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Creates a new tuple of vecs\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294736,"byte_end":294740,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"push","qualname":"::stats::tuple::TupledDistributionsBuilder::push","value":"fn (&mut self, tuple: Self::Item) -> ()","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Push one element into each of the vecs\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294868,"byte_end":294874,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"extend","qualname":"::stats::tuple::TupledDistributionsBuilder::extend","value":"fn (&mut self, other: &mut Self) -> ()","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Append one tuple of vecs to this one, leaving the vecs in the other tuple empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294980,"byte_end":294988,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"complete","qualname":"::stats::tuple::TupledDistributionsBuilder::complete","value":"fn (self) -> <Self::Item as Tuple>::Distributions","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Convert the tuple of vectors into a tuple of distributions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":308379,"byte_end":308390,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"Percentiles","qualname":"::stats::univariate::percentiles::Percentiles","value":"","parent":null,"children":[],"decl_id":null,"docs":" A \"view\" into the percentiles of a sample\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":309509,"byte_end":309511,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"at","qualname":"<Percentiles<A>>::at","value":"fn (&self, p: A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the percentile at `p`%","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":309768,"byte_end":309771,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"iqr","qualname":"<Percentiles<A>>::iqr","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the interquartile range\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":309994,"byte_end":310000,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"median","qualname":"<Percentiles<A>>::median","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the 50th percentile\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":310135,"byte_end":310144,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"quartiles","qualname":"<Percentiles<A>>::quartiles","value":"fn (&self) -> (A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 25th, 50th and 75th percentiles\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":314030,"byte_end":314036,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sample","qualname":"::stats::univariate::sample::Sample","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of data points drawn from a population","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":314422,"byte_end":314425,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Sample<A>>::new","value":"fn (slice: &[A]) -> &Sample<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sample from an existing slice","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":314672,"byte_end":314675,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"max","qualname":"<Sample<A>>::max","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the biggest element in the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":315069,"byte_end":315073,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"mean","qualname":"<Sample<A>>::mean","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the arithmetic average of the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":315372,"byte_end":315386,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"median_abs_dev","qualname":"<Sample<A>>::median_abs_dev","value":"fn (&self, median: Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":316128,"byte_end":316146,"line_start":82,"line_end":82,"column_start":12,"column_end":30},"name":"median_abs_dev_pct","qualname":"<Sample<A>>::median_abs_dev_pct","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation as a percentage of the median","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":316514,"byte_end":316517,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"min","qualname":"<Sample<A>>::min","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest element in the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":317061,"byte_end":317072,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"percentiles","qualname":"<Sample<A>>::percentiles","value":"fn (&self) -> Percentiles<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a \"view\" into the percentiles of the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":317965,"byte_end":317972,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"std_dev","qualname":"<Sample<A>>::std_dev","value":"fn (&self, mean: Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation of the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":318155,"byte_end":318166,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"std_dev_pct","qualname":"<Sample<A>>::std_dev_pct","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation as a percentage of the mean","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":318439,"byte_end":318442,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"sum","qualname":"<Sample<A>>::sum","value":"fn (&self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the sum of all the elements of the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":318597,"byte_end":318598,"line_start":167,"line_end":167,"column_start":12,"column_end":13},"name":"t","qualname":"<Sample<A>>::t","value":"fn (&self, other: &Sample<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the t score between these two samples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":319137,"byte_end":319140,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"var","qualname":"<Sample<A>>::var","value":"fn (&self, mean: Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the variance of the sample","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":319726,"byte_end":319735,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"bootstrap","qualname":"<Sample<A>>::bootstrap","value":"fn <T, S> (&self, nresamples: usize, statistic: S) -> T::Distributions","parent":null,"children":[],"decl_id":null,"docs":" Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":330573,"byte_end":330586,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"LabeledSample","qualname":"::stats::univariate::outliers::tukey::LabeledSample","value":"LabeledSample {  }","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234}],"decl_id":null,"docs":" A classified/labeled sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":330898,"byte_end":330903,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"count","qualname":"<LabeledSample>::count","value":"fn (&self) -> (usize, usize, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data points per label","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":331619,"byte_end":331625,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"fences","qualname":"<LabeledSample>::fences","value":"fn (&self) -> (A, A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the fences used to classify the outliers\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":331739,"byte_end":331743,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"iter","qualname":"<LabeledSample>::iter","value":"fn (&self) -> Iter<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labeled data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":333122,"byte_end":333126,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stats::univariate::outliers::tukey::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503}],"decl_id":null,"docs":" Iterator over the labeled data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334058,"byte_end":334066,"line_start":214,"line_end":214,"column_start":5,"column_end":13},"name":"HighMild","qualname":"::stats::univariate::outliers::tukey::Label::HighMild","value":"Label::HighMild","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334122,"byte_end":334132,"line_start":216,"line_end":216,"column_start":5,"column_end":15},"name":"HighSevere","qualname":"::stats::univariate::outliers::tukey::Label::HighSevere","value":"Label::HighSevere","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334185,"byte_end":334192,"line_start":218,"line_end":218,"column_start":5,"column_end":12},"name":"LowMild","qualname":"::stats::univariate::outliers::tukey::Label::LowMild","value":"Label::LowMild","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334247,"byte_end":334256,"line_start":220,"line_end":220,"column_start":5,"column_end":14},"name":"LowSevere","qualname":"::stats::univariate::outliers::tukey::Label::LowSevere","value":"Label::LowSevere","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334290,"byte_end":334302,"line_start":222,"line_end":222,"column_start":5,"column_end":17},"name":"NotAnOutlier","qualname":"::stats::univariate::outliers::tukey::Label::NotAnOutlier","value":"Label::NotAnOutlier","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" A normal data point\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":333998,"byte_end":334003,"line_start":212,"line_end":212,"column_start":10,"column_end":15},"name":"Label","qualname":"::stats::univariate::outliers::tukey::Label","value":"Label::{HighMild, HighSevere, LowMild, LowSevere, NotAnOutlier}","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520}],"decl_id":null,"docs":" Labels used to classify outliers\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334394,"byte_end":334401,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Label>::is_high","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" high value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334600,"byte_end":334607,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"is_mild","qualname":"<Label>::is_mild","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"mild\" outlier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334801,"byte_end":334807,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Label>::is_low","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" low value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334998,"byte_end":335008,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"is_outlier","qualname":"<Label>::is_outlier","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as an outlier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":335200,"byte_end":335209,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"is_severe","qualname":"<Label>::is_severe","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"severe\" outlier\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","byte_start":336166,"byte_end":336171,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Float","qualname":"::stats::float::Float","value":"Float: float::Float + From<usize, Output = Self> + From<f32, Output = Self> + Sync +\nSend","parent":null,"children":[],"decl_id":null,"docs":" This is an extension of `num_traits::float::Float` that adds safe\n casting and Sync + Send. Once `num_traits` has these features this\n can be removed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":282258,"byte_end":282270,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"Distribution","qualname":"::stats::Distribution","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bootstrap distribution of some parameter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":282395,"byte_end":282399,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"from","qualname":"<Distribution<A>>::from","value":"fn (values: Box<[A]>) -> Distribution<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a distribution from the given values\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":282677,"byte_end":282696,"line_start":42,"line_end":42,"column_start":12,"column_end":31},"name":"confidence_interval","qualname":"<Distribution<A>>::confidence_interval","value":"fn (&self, confidence_level: A) -> (A, A)","parent":null,"children":[],"decl_id":null,"docs":" Computes the confidence interval of the population parameter using percentiles","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":283359,"byte_end":283366,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"p_value","qualname":"<Distribution<A>>::p_value","value":"fn (&self, t: A, tails: &Tails) -> A","parent":null,"children":[],"decl_id":null,"docs":" Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the\n distribution.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":283982,"byte_end":283985,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"One","qualname":"::stats::Tails::One","value":"Tails::One","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":" One tailed test\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":284015,"byte_end":284018,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Two","qualname":"::stats::Tails::Two","value":"Tails::Two","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":" Two tailed test\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":283946,"byte_end":283951,"line_start":89,"line_end":89,"column_start":10,"column_end":15},"name":"Tails","qualname":"::stats::Tails","value":"Tails::{One, Two}","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1586}],"decl_id":null,"docs":" Number of tails for significance testing\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":4013,"byte_end":4022,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"black_box","qualname":"::black_box","value":"fn <T> (dummy: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A function that is opaque to the optimizer, used to prevent the compiler from\n optimizing away computations in a benchmark.","sig":null,"attributes":[{"value":"cfg(not (feature = \"real_blackbox\"))","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":3967,"byte_end":4005,"line_start":140,"line_end":140,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":4372,"byte_end":4375,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"Fun","qualname":"::Fun","value":"Fun {  }","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645}],"decl_id":null,"docs":" Representing a function to benchmark together with a name of that function.\n Used together with `bench_functions` to represent one out of multiple functions\n under benchmark.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":4626,"byte_end":4629,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"new","qualname":"<Fun<I, M>>::new","value":"fn <F> (name: &str, f: F) -> Fun<I, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Fun` given a name and a closure\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":7147,"byte_end":7157,"line_start":209,"line_end":209,"column_start":5,"column_end":15},"name":"SmallInput","qualname":"::BatchSize::SmallInput","value":"BatchSize::SmallInput","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" `SmallInput` indicates that the input to the benchmark routine (the value returned from\n the setup routine) is small enough that millions of values can be safely held in memory.\n Always prefer `SmallInput` unless the benchmark is using too much memory.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":7574,"byte_end":7584,"line_start":217,"line_end":217,"column_start":5,"column_end":15},"name":"LargeInput","qualname":"::BatchSize::LargeInput","value":"BatchSize::LargeInput","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" `LargeInput` indicates that the input to the benchmark routine or the value returned from\n that routine is large. This will reduce the memory usage but increase the measurement\n overhead.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":8150,"byte_end":8162,"line_start":227,"line_end":227,"column_start":5,"column_end":17},"name":"PerIteration","qualname":"::BatchSize::PerIteration","value":"BatchSize::PerIteration","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" `PerIteration` indicates that the input to the benchmark routine or the value returned from\n that routine is extremely large or holds some limited resource, such that holding many values\n in memory at once is infeasible. This provides the worst measurement overhead, but the\n lowest memory usage.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":8627,"byte_end":8637,"line_start":234,"line_end":234,"column_start":5,"column_end":15},"name":"NumBatches","qualname":"::BatchSize::NumBatches","value":"BatchSize::NumBatches(u64)","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" `NumBatches` will attempt to divide the iterations up into a given number of batches.\n A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n measurement overhead. This allows the user to choose their own tradeoff between memory usage\n and measurement overhead, but care must be taken in tuning the number of batches. Most\n benchmarks should use `SmallInput` or `LargeInput` instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":9066,"byte_end":9079,"line_start":241,"line_end":241,"column_start":5,"column_end":18},"name":"NumIterations","qualname":"::BatchSize::NumIterations","value":"BatchSize::NumIterations(u64)","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" `NumIterations` fixes the batch size to a constant number, specified by the user. This\n allows the user to choose their own tradeoff between overhead and memory usage, but care must\n be taken in tuning the batch size. In general, the measurement overhead of NumIterations\n will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n `LargeInput` instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":9110,"byte_end":9125,"line_start":244,"line_end":244,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::BatchSize::__NonExhaustive","value":"BatchSize::__NonExhaustive","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":6656,"byte_end":6665,"line_start":202,"line_end":202,"column_start":10,"column_end":19},"name":"BatchSize","qualname":"::BatchSize","value":"BatchSize::{SmallInput, LargeInput, PerIteration, NumBatches, NumIterations, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2290},{"krate":0,"index":2293}],"decl_id":null,"docs":" Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and\n [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the\n batch size.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":11151,"byte_end":11158,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::Bencher","value":"Bencher {  }","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660}],"decl_id":null,"docs":" Timer struct used to iterate a benchmarked function and measure the runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":12698,"byte_end":12702,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"fn <O, R> (&mut self, mut routine: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and timing the total elapsed time.","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":12670,"byte_end":12686,"line_start":325,"line_end":325,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":14293,"byte_end":14304,"line_start":377,"line_end":377,"column_start":12,"column_end":23},"name":"iter_custom","qualname":"<Bencher>::iter_custom","value":"fn <R> (&mut self, mut routine: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":14265,"byte_end":14281,"line_start":376,"line_end":376,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":14586,"byte_end":14601,"line_start":388,"line_end":388,"column_start":12,"column_end":27},"name":"iter_with_setup","qualname":"<Bencher>::iter_with_setup","value":"fn <I, O, S, R> (&mut self, setup: S, routine: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":15878,"byte_end":15898,"line_start":431,"line_end":431,"column_start":12,"column_end":32},"name":"iter_with_large_drop","qualname":"<Bencher>::iter_with_large_drop","value":"fn <O, R> (&mut self, mut routine: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by collecting its output on each iteration. This avoids timing the\n destructor of the value returned by `routine`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":16082,"byte_end":16103,"line_start":439,"line_end":439,"column_start":12,"column_end":33},"name":"iter_with_large_setup","qualname":"<Bencher>::iter_with_large_setup","value":"fn <I, O, S, R> (&mut self, setup: S, routine: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":17705,"byte_end":17717,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"iter_batched","qualname":"<Bencher>::iter_batched","value":"fn <I, O, S, R> (&mut self, mut setup: S, mut routine: R, size: BatchSize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](struct.BatchSize.html) for\n details on choosing the batch size. Use this when the routine must consume its input.","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":17677,"byte_end":17693,"line_start":490,"line_end":490,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":20719,"byte_end":20735,"line_start":581,"line_end":581,"column_start":12,"column_end":28},"name":"iter_batched_ref","qualname":"<Bencher>::iter_batched_ref","value":"fn <I, O, S, R> (&mut self, mut setup: S, mut routine: R, size: BatchSize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](struct.BatchSize.html) for\n details on choosing the batch size. Use this when the routine should accept the input by\n mutable reference.","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":20691,"byte_end":20707,"line_start":580,"line_end":580,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":22913,"byte_end":22920,"line_start":641,"line_end":641,"column_start":5,"column_end":12},"name":"Compare","qualname":"::Baseline::Compare","value":"Baseline::Compare","parent":{"krate":0,"index":2310},"children":[],"decl_id":null,"docs":" Compare ensures a previous saved version of the baseline\n exists and runs comparison against that.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":23055,"byte_end":23059,"line_start":644,"line_end":644,"column_start":5,"column_end":9},"name":"Save","qualname":"::Baseline::Save","value":"Baseline::Save","parent":{"krate":0,"index":2310},"children":[],"decl_id":null,"docs":" Save writes the benchmark results to the baseline directory,\n overwriting any results that were previously there.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":22784,"byte_end":22792,"line_start":638,"line_end":638,"column_start":10,"column_end":18},"name":"Baseline","qualname":"::Baseline","value":"Baseline::{Compare, Save}","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2313}],"decl_id":null,"docs":" Baseline describes how the baseline_directory is handled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":23322,"byte_end":23329,"line_start":652,"line_end":652,"column_start":5,"column_end":12},"name":"Gnuplot","qualname":"::PlottingBackend::Gnuplot","value":"PlottingBackend::Gnuplot","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":" Plotting backend which uses the external `gnuplot` command to render plots. This is the\n default if the `gnuplot` command is installed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":23459,"byte_end":23467,"line_start":655,"line_end":655,"column_start":5,"column_end":13},"name":"Plotters","qualname":"::PlottingBackend::Plotters","value":"PlottingBackend::Plotters","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":" Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n is not installed.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":23149,"byte_end":23164,"line_start":649,"line_end":649,"column_start":10,"column_end":25},"name":"PlottingBackend","qualname":"::PlottingBackend","value":"PlottingBackend::{Gnuplot, Plotters}","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2323}],"decl_id":null,"docs":" Enum used to select the plotting backend.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":24105,"byte_end":24114,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"Criterion","qualname":"::Criterion","value":"Criterion {  }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" The benchmark manager","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":26727,"byte_end":26743,"line_start":746,"line_end":746,"column_start":12,"column_end":28},"name":"with_measurement","qualname":"<Criterion<M>>::with_measurement","value":"fn <M2> (self, m: M2) -> Criterion<M2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the measurement for the benchmarks run with this runner. See the\n Measurement trait for more details\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":27644,"byte_end":27657,"line_start":769,"line_end":769,"column_start":12,"column_end":25},"name":"with_profiler","qualname":"<Criterion<M>>::with_profiler","value":"fn <P> (self, p: P) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the internal profiler for benchmarks run with this runner. See\n the Profiler trait for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":28038,"byte_end":28054,"line_start":780,"line_end":780,"column_start":12,"column_end":28},"name":"plotting_backend","qualname":"<Criterion<M>>::plotting_backend","value":"fn (self, backend: PlottingBackend) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters\n if not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":28837,"byte_end":28848,"line_start":803,"line_end":803,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<Criterion<M>>::sample_size","value":"fn (mut self, n: usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default size of the sample for benchmarks run with this runner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":29138,"byte_end":29150,"line_start":815,"line_end":815,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<Criterion<M>>::warm_up_time","value":"fn (mut self, dur: Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default warm up time for benchmarks run with this runner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":29708,"byte_end":29724,"line_start":832,"line_end":832,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<Criterion<M>>::measurement_time","value":"fn (mut self, dur: Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default measurement time for benchmarks run with this runner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":30370,"byte_end":30380,"line_start":850,"line_end":850,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<Criterion<M>>::nresamples","value":"fn (mut self, n: usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default number of resamples for benchmarks run with this runner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":31030,"byte_end":31045,"line_start":870,"line_end":870,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<Criterion<M>>::noise_threshold","value":"fn (mut self, threshold: f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default noise threshold for benchmarks run with this runner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":31584,"byte_end":31600,"line_start":886,"line_end":886,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<Criterion<M>>::confidence_level","value":"fn (mut self, cl: f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default confidence level for benchmarks run with this runner","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":32162,"byte_end":32180,"line_start":902,"line_end":902,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<Criterion<M>>::significance_level","value":"fn (mut self, sl: f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks run with this runner","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":32614,"byte_end":32624,"line_start":917,"line_end":917,"column_start":12,"column_end":22},"name":"with_plots","qualname":"<Criterion<M>>::with_plots","value":"fn (mut self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Enables plotting\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":33042,"byte_end":33055,"line_start":929,"line_end":929,"column_start":12,"column_end":25},"name":"without_plots","qualname":"<Criterion<M>>::without_plots","value":"fn (mut self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Disables plotting\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":33441,"byte_end":33449,"line_start":939,"line_end":939,"column_start":12,"column_end":20},"name":"can_plot","qualname":"<Criterion<M>>::can_plot","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if generation of the plots is possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":33676,"byte_end":33689,"line_start":946,"line_end":946,"column_start":12,"column_end":25},"name":"save_baseline","qualname":"<Criterion<M>>::save_baseline","value":"fn (mut self, baseline: String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and enables overwriting the previous results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":33933,"byte_end":33948,"line_start":953,"line_end":953,"column_start":12,"column_end":27},"name":"retain_baseline","qualname":"<Criterion<M>>::retain_baseline","value":"fn (mut self, baseline: String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and disables overwriting the previous results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":34228,"byte_end":34239,"line_start":961,"line_end":961,"column_start":12,"column_end":23},"name":"with_filter","qualname":"<Criterion<M>>::with_filter","value":"fn <S> (mut self, filter: S) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Filters the benchmarks. Only benchmarks with names that contain the\n given string will be executed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":34702,"byte_end":34718,"line_start":976,"line_end":976,"column_start":12,"column_end":28},"name":"output_directory","qualname":"<Criterion<M>>::output_directory","value":"fn (mut self, path: &std::path::Path) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory (currently for testing only)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":34949,"byte_end":34961,"line_start":984,"line_end":984,"column_start":12,"column_end":24},"name":"profile_time","qualname":"<Criterion<M>>::profile_time","value":"fn (mut self, profile_time: Option<Duration>) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the profile time (currently for testing only)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":35171,"byte_end":35184,"line_start":992,"line_end":992,"column_start":12,"column_end":25},"name":"final_summary","qualname":"<Criterion<M>>::final_summary","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the final summary at the end of a run.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":35746,"byte_end":35765,"line_start":1009,"line_end":1009,"column_start":12,"column_end":31},"name":"configure_from_args","qualname":"<Criterion<M>>::configure_from_args","value":"fn (mut self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Configure this criterion struct based on the command-line arguments to\n this process.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":47620,"byte_end":47635,"line_start":1306,"line_end":1306,"column_start":12,"column_end":27},"name":"benchmark_group","qualname":"<Criterion<M>>::benchmark_group","value":"fn <S> (&mut self, group_name: S) -> BenchmarkGroup<'_, M>","parent":null,"children":[],"decl_id":null,"docs":" Return a benchmark group. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":48445,"byte_end":48459,"line_start":1335,"line_end":1335,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<Criterion<M>>::bench_function","value":"fn <F> (&mut self, id: &str, f: F) -> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":49423,"byte_end":49439,"line_start":1367,"line_end":1367,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<Criterion<M>>::bench_with_input","value":"fn <F, I> (&mut self, id: BenchmarkId, input: &I, f: F) -> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function with an input. For comparing multiple functions or multiple inputs,\n see `benchmark_group`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":50766,"byte_end":50792,"line_start":1407,"line_end":1407,"column_start":12,"column_end":38},"name":"bench_function_over_inputs","qualname":"<Criterion<M>>::bench_function_over_inputs","value":"fn <I, F> (&mut self, id: &str, f: F, inputs: I) -> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function under various inputs","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":52286,"byte_end":52301,"line_start":1458,"line_end":1458,"column_start":12,"column_end":27},"name":"bench_functions","qualname":"<Criterion<M>>::bench_functions","value":"fn <I> (&mut self, id: &str, funs: Vec<Fun<I, M>>, input: I) -> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks multiple functions","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":53685,"byte_end":53690,"line_start":1501,"line_end":1501,"column_start":12,"column_end":17},"name":"bench","qualname":"<Criterion<M>>::bench","value":"fn <B> (&mut self, group_id: &str, benchmark: B) -> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Executes the given benchmark. Use this variant to execute benchmarks\n with complex configuration. This can be used to compare multiple\n functions, execute benchmarks with custom configuration settings and\n more. See the Benchmark and ParameterizedBenchmark structs for more\n information.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":55879,"byte_end":55884,"line_start":1575,"line_end":1575,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::Throughput::Bytes","value":"Throughput::Bytes(u64)","parent":{"krate":0,"index":2458},"children":[],"decl_id":null,"docs":" Measure throughput in terms of bytes/second. The value should be the number of bytes\n processed by one iteration of the benchmarked code. Typically, this would be the length of\n an input string or `&[u8]`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":56208,"byte_end":56216,"line_start":1581,"line_end":1581,"column_start":5,"column_end":13},"name":"Elements","qualname":"::Throughput::Elements","value":"Throughput::Elements(u64)","parent":{"krate":0,"index":2458},"children":[],"decl_id":null,"docs":" Measure throughput in terms of elements/second. The value should be the number of elements\n processed by one iteration of the benchmarked code. Typically, this would be the size of a\n collection, but could also be the number of lines of input text or the number of values to\n parse.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":55634,"byte_end":55644,"line_start":1571,"line_end":1571,"column_start":10,"column_end":20},"name":"Throughput","qualname":"::Throughput","value":"Throughput::{Bytes, Elements}","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2462}],"decl_id":null,"docs":" Enum representing different ways of measuring the throughput of benchmarked code.\n If the throughput setting is configured for a benchmark then the estimated throughput will\n be reported as well as the time per iteration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":56331,"byte_end":56337,"line_start":1588,"line_end":1588,"column_start":5,"column_end":11},"name":"Linear","qualname":"::AxisScale::Linear","value":"AxisScale::Linear","parent":{"krate":0,"index":2518},"children":[],"decl_id":null,"docs":" Axes scale linearly\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":56379,"byte_end":56390,"line_start":1591,"line_end":1591,"column_start":5,"column_end":16},"name":"Logarithmic","qualname":"::AxisScale::Logarithmic","value":"AxisScale::Logarithmic","parent":{"krate":0,"index":2518},"children":[],"decl_id":null,"docs":" Axes scale logarithmically\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":56287,"byte_end":56296,"line_start":1586,"line_end":1586,"column_start":10,"column_end":19},"name":"AxisScale","qualname":"::AxisScale","value":"AxisScale::{Linear, Logarithmic}","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2521}],"decl_id":null,"docs":" Axis scaling type\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57033,"byte_end":57050,"line_start":1610,"line_end":1610,"column_start":12,"column_end":29},"name":"PlotConfiguration","qualname":"::PlotConfiguration","value":"PlotConfiguration {  }","parent":null,"children":[{"krate":0,"index":2529}],"decl_id":null,"docs":" Contains the configuration options for the plots generated by a particular benchmark\n or benchmark group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57513,"byte_end":57526,"line_start":1626,"line_end":1626,"column_start":12,"column_end":25},"name":"summary_scale","qualname":"<PlotConfiguration>::summary_scale","value":"fn (mut self, new_scale: AxisScale) -> PlotConfiguration","parent":null,"children":[],"decl_id":null,"docs":" Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would\n set this to logarithmic if benchmarking over a range of inputs which scale exponentially.\n Defaults to linear.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57731,"byte_end":57737,"line_start":1634,"line_end":1634,"column_start":8,"column_end":14},"name":"runner","qualname":"::runner","value":"fn (benches: &[&dyn Fn()]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Custom-test-framework runner. Should not be called directly.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":75418,"byte_end":75440,"line_start":37,"line_end":37,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":75820,"byte_end":75842,"line_start":52,"line_end":52,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":81915,"byte_end":81924,"line_start":226,"line_end":226,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":83609,"byte_end":83618,"line_start":288,"line_end":288,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":85418,"byte_end":85440,"line_start":347,"line_end":347,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":87994,"byte_end":88016,"line_start":433,"line_end":433,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":93655,"byte_end":93669,"line_start":84,"line_end":84,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":100960,"byte_end":100974,"line_start":306,"line_end":306,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":102133,"byte_end":102144,"line_start":340,"line_end":340,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104654,"byte_end":104665,"line_start":406,"line_end":406,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104706,"byte_end":104707,"line_start":407,"line_end":407,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104920,"byte_end":104931,"line_start":414,"line_end":414,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":105045,"byte_end":105046,"line_start":419,"line_end":419,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","byte_start":105769,"byte_end":105784,"line_start":23,"line_end":23,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","byte_start":107159,"byte_end":107172,"line_start":60,"line_end":60,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","byte_start":107560,"byte_end":107573,"line_start":75,"line_end":75,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","byte_start":108473,"byte_end":108478,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","byte_start":109167,"byte_end":109172,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","byte_start":109798,"byte_end":109803,"line_start":62,"line_end":62,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/estimate.rs","byte_start":110305,"byte_end":110314,"line_start":16,"line_end":16,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":117551,"byte_end":117570,"line_start":58,"line_end":58,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":118239,"byte_end":118243,"line_start":92,"line_end":92,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":119042,"byte_end":119052,"line_start":126,"line_end":126,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":120719,"byte_end":120733,"line_start":181,"line_end":181,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":123547,"byte_end":123551,"line_start":264,"line_end":264,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":124404,"byte_end":124408,"line_start":284,"line_end":284,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":133768,"byte_end":133772,"line_start":548,"line_end":548,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":152729,"byte_end":152746,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":154135,"byte_end":154152,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":155391,"byte_end":155399,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/summary.rs","byte_start":196007,"byte_end":196016,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/mod.rs","byte_start":159908,"byte_end":159911,"line_start":60,"line_end":60,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/mod.rs","byte_start":160107,"byte_end":160114,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/plotters_backend/mod.rs","byte_start":205035,"byte_end":205050,"line_start":36,"line_end":36,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/mod.rs","byte_start":156458,"byte_end":156469,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/mod.rs","byte_start":157410,"byte_end":157418,"line_start":55,"line_end":55,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":247687,"byte_end":247703,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":249210,"byte_end":249225,"line_start":45,"line_end":45,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":251083,"byte_end":251094,"line_start":109,"line_end":109,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":254688,"byte_end":254699,"line_start":226,"line_end":226,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":254830,"byte_end":254841,"line_start":231,"line_end":231,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":255542,"byte_end":255555,"line_start":256,"line_end":256,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":256977,"byte_end":256984,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":257098,"byte_end":257105,"line_start":309,"line_end":309,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":259243,"byte_end":259252,"line_start":390,"line_end":390,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":261954,"byte_end":261963,"line_start":500,"line_end":500,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/routine.rs","byte_start":280063,"byte_end":280071,"line_start":174,"line_end":174,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/routine.rs","byte_start":280341,"byte_end":280349,"line_start":187,"line_end":187,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/regression.rs","byte_start":291191,"byte_end":291196,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/resamples.rs","byte_start":292599,"byte_end":292608,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":284803,"byte_end":284807,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":284925,"byte_end":284929,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":285020,"byte_end":285024,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":285316,"byte_end":285320,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":287193,"byte_end":287198,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":308512,"byte_end":308523,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/resamples.rs","byte_start":310710,"byte_end":310719,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":314134,"byte_end":314140,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":320944,"byte_end":320950,"line_start":250,"line_end":250,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/kernel.rs","byte_start":325113,"byte_end":325121,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/mod.rs","byte_start":321386,"byte_end":321389,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/mod.rs","byte_start":322679,"byte_end":322688,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":330684,"byte_end":330697,"line_start":67,"line_end":67,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":331895,"byte_end":331908,"line_start":115,"line_end":115,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":332096,"byte_end":332109,"line_start":127,"line_end":127,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":333240,"byte_end":333244,"line_start":179,"line_end":179,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334312,"byte_end":334317,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":282294,"byte_end":282306,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":283722,"byte_end":283734,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":4514,"byte_end":4517,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":9134,"byte_end":9143,"line_start":246,"line_end":246,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":11584,"byte_end":11591,"line_start":288,"line_end":288,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1674},{"krate":0,"index":1679},{"krate":0,"index":1684},{"krate":0,"index":1690},{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":24648,"byte_end":24657,"line_start":691,"line_end":691,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":26577,"byte_end":26586,"line_start":743,"line_end":743,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":47775,"byte_end":47784,"line_start":1310,"line_end":1310,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":53992,"byte_end":54000,"line_start":1517,"line_end":1517,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57103,"byte_end":57120,"line_start":1614,"line_end":1614,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57261,"byte_end":57278,"line_start":1622,"line_end":1622,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":1639,"byte_end":1650,"line_start":70,"line_end":70,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":453}},{"kind":"Mod","span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":1670,"byte_end":1678,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":952}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":75418,"byte_end":75440,"line_start":37,"line_end":37,"column_start":18,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":75820,"byte_end":75842,"line_start":52,"line_end":52,"column_start":6,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":77520,"byte_end":77525,"line_start":95,"line_end":95,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":81915,"byte_end":81924,"line_start":226,"line_end":226,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":83609,"byte_end":83618,"line_start":288,"line_end":288,"column_start":49,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":128},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":85418,"byte_end":85440,"line_start":347,"line_end":347,"column_start":12,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark.rs","byte_start":87994,"byte_end":88016,"line_start":433,"line_end":433,"column_start":39,"column_end":61},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":93655,"byte_end":93669,"line_start":84,"line_end":84,"column_start":26,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":100960,"byte_end":100974,"line_start":306,"line_end":306,"column_start":35,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":102133,"byte_end":102144,"line_start":340,"line_end":340,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104654,"byte_end":104665,"line_start":406,"line_end":406,"column_start":28,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104706,"byte_end":104707,"line_start":407,"line_end":407,"column_start":38,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":233},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104837,"byte_end":104843,"line_start":411,"line_end":411,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":230},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":104920,"byte_end":104931,"line_start":414,"line_end":414,"column_start":26,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/benchmark_group.rs","byte_start":105045,"byte_end":105046,"line_start":419,"line_end":419,"column_start":43,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":239},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","byte_start":105769,"byte_end":105784,"line_start":23,"line_end":23,"column_start":16,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","byte_start":107159,"byte_end":107172,"line_start":60,"line_end":60,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/csv_report.rs","byte_start":107560,"byte_end":107573,"line_start":75,"line_end":75,"column_start":17,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","byte_start":108473,"byte_end":108478,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1867},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","byte_start":109167,"byte_end":109172,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1867},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/error.rs","byte_start":109798,"byte_end":109803,"line_start":62,"line_end":62,"column_start":25,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1867},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/estimate.rs","byte_start":110305,"byte_end":110314,"line_start":16,"line_end":16,"column_start":23,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1883},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":117551,"byte_end":117570,"line_start":58,"line_end":58,"column_start":6,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":118239,"byte_end":118243,"line_start":92,"line_end":92,"column_start":6,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":119042,"byte_end":119052,"line_start":126,"line_end":126,"column_start":10,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":120719,"byte_end":120733,"line_start":181,"line_end":181,"column_start":10,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":123547,"byte_end":123551,"line_start":264,"line_end":264,"column_start":6,"column_end":10},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":124404,"byte_end":124408,"line_start":284,"line_end":284,"column_start":17,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":393},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/html/mod.rs","byte_start":133768,"byte_end":133772,"line_start":548,"line_end":548,"column_start":6,"column_end":10},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":152729,"byte_end":152746,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":154135,"byte_end":154152,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":475},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/measurement.rs","byte_start":155391,"byte_end":155399,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":484},"to":{"krate":0,"index":466}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/summary.rs","byte_start":196007,"byte_end":196016,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/mod.rs","byte_start":159908,"byte_end":159911,"line_start":60,"line_end":60,"column_start":23,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/gnuplot_backend/mod.rs","byte_start":160107,"byte_end":160114,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2093},"to":{"krate":0,"index":943}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/plotters_backend/mod.rs","byte_start":205035,"byte_end":205050,"line_start":36,"line_end":36,"column_start":18,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2097},"to":{"krate":0,"index":943}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/mod.rs","byte_start":156458,"byte_end":156469,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/plot/mod.rs","byte_start":157410,"byte_end":157418,"line_start":55,"line_end":55,"column_start":10,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/profiler.rs","byte_start":247687,"byte_end":247703,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":957},"to":{"krate":0,"index":954}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":249210,"byte_end":249225,"line_start":45,"line_end":45,"column_start":10,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":251083,"byte_end":251094,"line_start":109,"line_end":109,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":254688,"byte_end":254699,"line_start":226,"line_end":226,"column_start":23,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2140},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":254830,"byte_end":254841,"line_start":231,"line_end":231,"column_start":21,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2140},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":255542,"byte_end":255555,"line_start":256,"line_end":256,"column_start":6,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":256977,"byte_end":256984,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":257098,"byte_end":257105,"line_start":309,"line_end":309,"column_start":17,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1049},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":259243,"byte_end":259252,"line_start":390,"line_end":390,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/report.rs","byte_start":261954,"byte_end":261963,"line_start":500,"line_end":500,"column_start":17,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1063},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/routine.rs","byte_start":280063,"byte_end":280071,"line_start":174,"line_end":174,"column_start":28,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/routine.rs","byte_start":280341,"byte_end":280349,"line_start":187,"line_end":187,"column_start":46,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1122},"to":{"krate":0,"index":1111}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/regression.rs","byte_start":291191,"byte_end":291196,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/resamples.rs","byte_start":292599,"byte_end":292608,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":284803,"byte_end":284807,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":284925,"byte_end":284929,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":285020,"byte_end":285024,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":285316,"byte_end":285320,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/bivariate/mod.rs","byte_start":287193,"byte_end":287198,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1217},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":293930,"byte_end":293935,"line_start":6,"line_end":6,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1231}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294275,"byte_end":294280,"line_start":15,"line_end":15,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1234}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/tuple.rs","byte_start":294491,"byte_end":294496,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1236}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/percentiles.rs","byte_start":308512,"byte_end":308523,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/resamples.rs","byte_start":310710,"byte_end":310719,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":314134,"byte_end":314140,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/sample.rs","byte_start":320944,"byte_end":320950,"line_start":250,"line_end":250,"column_start":24,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/kernel.rs","byte_start":324898,"byte_end":324902,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1408}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/kernel.rs","byte_start":324905,"byte_end":324909,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":1408}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/kernel.rs","byte_start":325113,"byte_end":325121,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2225},"to":{"krate":0,"index":1408}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/mod.rs","byte_start":321386,"byte_end":321389,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/kde/mod.rs","byte_start":322679,"byte_end":322688,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":330684,"byte_end":330697,"line_start":67,"line_end":67,"column_start":13,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":331895,"byte_end":331908,"line_start":115,"line_end":115,"column_start":23,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2230},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":332096,"byte_end":332109,"line_start":127,"line_end":127,"column_start":30,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2230},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":333240,"byte_end":333244,"line_start":179,"line_end":179,"column_start":26,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1499},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/univariate/outliers/tukey.rs","byte_start":334312,"byte_end":334317,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","byte_start":336184,"byte_end":336189,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":43,"index":228},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","byte_start":336192,"byte_end":336196,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":26,"index":12},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","byte_start":336221,"byte_end":336225,"line_start":10,"line_end":10,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":26,"index":12},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","byte_start":336248,"byte_end":336252,"line_start":10,"line_end":10,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/float.rs","byte_start":336255,"byte_end":336259,"line_start":10,"line_end":10,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":282294,"byte_end":282306,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/stats/mod.rs","byte_start":283722,"byte_end":283734,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":4514,"byte_end":4517,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":9134,"byte_end":9143,"line_start":246,"line_end":246,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":11584,"byte_end":11591,"line_start":288,"line_end":288,"column_start":26,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":24648,"byte_end":24657,"line_start":691,"line_end":691,"column_start":18,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1697},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":26577,"byte_end":26586,"line_start":743,"line_end":743,"column_start":22,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":47775,"byte_end":47784,"line_start":1310,"line_end":1310,"column_start":9,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":53992,"byte_end":54000,"line_start":1517,"line_end":1517,"column_start":22,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":2,"index":31467},"to":{"krate":0,"index":1774}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57103,"byte_end":57120,"line_start":1614,"line_end":1614,"column_start":18,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/jacobfeldman/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.1/src/lib.rs","byte_start":57261,"byte_end":57278,"line_start":1622,"line_end":1622,"column_start":6,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2528},"to":{"krate":4294967295,"index":4294967295}}]}